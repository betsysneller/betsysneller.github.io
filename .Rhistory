p = sum(Production=="p")/n) %>%
gather(., key="value", value="mean", f, p) %>%
ungroup %>%
mutate(Gender = memisc::recode(.$Gender, "b" -> "Boy", "g" -> "Girl"),
prop=mean*100) -> inddat121
inddat121 %>%
group_by(Exp, AgeCat, Gender, value) %>%
mutate(ExpID = paste(Exp, SID),
partn = as.numeric(length(unique(ExpID))),
sd = sd(mean),
prop = mean(mean)*100,
se = (sd/sqrt(partn))*100) %>%
dplyr::select(AgeCat, SID, Exp, Gender, Lang.Betsy, value, sd, prop, se) -> propdat121
propdat121 %>%
drop_na() -> propdat121
propdat121$Gender <- factor(propdat121$Gender, levels=c("Boy", "Girl"))
propdat121$AgeCat <- memisc::recode(propdat121$AgeCat, "C" -> "6-7", "M" -> "8-9", "A" -> "Adult")
propdat121$AgeCat <- factor(propdat121$AgeCat, levels=c("6-7", "8-9", "Adult"))
inddat121$Gender <- factor(inddat121$Gender, levels=c("Boy", "Girl"))
inddat121$AgeCat <- memisc::recode(inddat121$AgeCat, "C" -> "6-7", "M" -> "8-9", "A" -> "Adult")
inddat121$AgeCat <- factor(inddat121$AgeCat, levels=c("6-7", "8-9", "Adult"))
pdf("~/Box Sync/Abstracts/2020/Edinburgh/p121.pdf", height=5, width=14)
plot <- ggplot(subset(propdat121, value=="f"), aes(y=prop, x=Gender)) +
facet_grid(~AgeCat) +
geom_dotplot(data=subset(inddat121, value=="f"), aes(y=prop, x=Gender, fill=AgeCat), binaxis="y",
binwidth = 1.5, dotsize=4, stackgroups=TRUE, binpositions="all", stackdir="center") +
geom_errorbar(aes(ymin=prop-se, ymax=prop+se), color="black", width=.3, position=position_dodge(.7), size=1.3)+
theme_bw() +
labs(x="", y="Percent /f/ produced", title="") +
scale_fill_manual(values=c("#63AAC0", "#F1AF3E", "#F46A58")) +
guides(fill=FALSE) +
theme(text = element_text(size=20))
plot2 <- plot +
geom_segment(aes(x, y, xend=xend, yend=yend), data.frame(x=.6, xend=1.4, y=0, yend=0),
size=1, color="#4F4F4F", alpha=1, linetype="dashed") +
geom_segment(aes(x,y,xend=xend,yend=yend), data.frame(x=1.6, xend=2.4, y=100, yend=100),
size=1, color="#4F4F4F", alpha=1, linetype="dashed")
print(plot2)
dev.off()
p221dat %>%
filter(`RecEx.Betsy` == "no", Lang=="A", Production!="b", Production!="g",
Production!="k", Production!="d", Production!="th", Production!="t",
Production!="s", Production!="", Production!="?", !is.na(Production), Production!="what") %>%
mutate(Prod = memisc::recode(Production, "p" -> 0, "f" -> 1),
SID = as.factor(SID),
Exp = as.factor(Exp),
AgeCat = as.factor(AgeCat)) %>%
dplyr::select(Exp, SID, AgeCat, Production, Gender, Lang.Betsy) -> l221
l221 %>%
group_by(AgeCat, SID, Exp, Gender, Lang.Betsy) %>%
summarise(n = n(),
f = sum(Production=="f")/n,
p = sum(Production=="p")/n) %>%
gather(., key="value", value="mean", f, p) %>%
ungroup %>%
mutate(Gender = memisc::recode(.$Gender, "b" -> "Boy", "g" -> "Girl"),
prop=mean*100) -> inddat221
inddat221 %>%
group_by(Exp, AgeCat, Gender, value) %>%
mutate(ExpID = paste(Exp, SID),
partn = as.numeric(length(unique(ExpID))),
sd = sd(mean),
prop = mean(mean)*100,
se = (sd/sqrt(partn))*100) %>%
dplyr::select(AgeCat, SID, Exp, Gender, Lang.Betsy, value, sd, prop, se) -> propdat221
propdat221 %>%
drop_na() -> propdat221
propdat221$Gender <- factor(propdat221$Gender, levels=c("Boy", "Girl"))
propdat221$AgeCat <- memisc::recode(propdat221$AgeCat, "C" -> "6-7", "M" -> "8-9", "A" -> "Adult")
propdat221$AgeCat <- factor(propdat221$AgeCat, levels=c("6-7", "8-9", "Adult"))
inddat221$Gender <- factor(inddat221$Gender, levels=c("Boy", "Girl"))
inddat221$AgeCat <- memisc::recode(inddat221$AgeCat, "C" -> "6-7", "M" -> "8-9", "A" -> "Adult")
inddat221$AgeCat <- factor(inddat221$AgeCat, levels=c("6-7", "8-9", "Adult"))
pdf("~/Box Sync/Abstracts/2020/Edinburgh/p221.pdf", height=5, width=14)
plot <- ggplot(subset(propdat221, value=="f"), aes(y=prop, x=Gender)) +
facet_grid(~AgeCat) +
geom_dotplot(data=subset(inddat221, value=="f"), aes(y=prop, x=Gender, fill=AgeCat), binaxis="y",
binwidth = 1.5, dotsize=4, stackgroups=TRUE, binpositions="all", stackdir="center") +
geom_errorbar(aes(ymin=prop-se, ymax=prop+se), color="black", width=.3, position=position_dodge(.7), size=1.3)+
theme_bw() +
labs(x="", y="Percent /f/ produced", title="") +
scale_fill_manual(values=c("#63AAC0", "#F1AF3E", "#F46A58")) +
guides(fill=FALSE) +
theme(text = element_text(size=20))
plot2 <- plot +
geom_segment(aes(x, y, xend=xend, yend=yend), data.frame(x=.6, xend=1.4, y=67, yend=67),
size=1, color="#4F4F4F", alpha=1, linetype="dashed") +
geom_segment(aes(x,y,xend=xend,yend=yend), data.frame(x=1.6, xend=2.4, y=67, yend=67),
size=1, color="#4F4F4F", alpha=1, linetype="dashed")
print(plot2)
dev.off()
p321dat %>%
filter(`RecEx.Betsy` == "no", Lang=="A", Production!="b", Production!="g",
Production!="k", Production!="d", Production!="th", Production!="t",
Production!="s", Production!="", Production!="?", !is.na(Production), Production!="what") %>%
mutate(Prod = memisc::recode(Production, "p" -> 0, "f" -> 1),
SID = as.factor(SID),
Exp = as.factor(Exp),
AgeCat = as.factor(AgeCat)) %>%
dplyr::select(Exp, SID, AgeCat, Production, Gender, Lang.Betsy) -> l321
l321 %>%
group_by(AgeCat, SID, Exp, Gender, Lang.Betsy) %>%
summarise(n = n(),
f = sum(Production=="f")/n,
p = sum(Production=="p")/n) %>%
gather(., key="value", value="mean", f, p) %>%
ungroup %>%
mutate(Gender = memisc::recode(.$Gender, "b" -> "Boy", "g" -> "Girl"),
prop=mean*100) -> inddat321
inddat321 %>%
group_by(Exp, AgeCat, Gender, value) %>%
mutate(ExpID = paste(Exp, SID),
partn = as.numeric(length(unique(ExpID))),
sd = sd(mean),
prop = mean(mean)*100,
se = (sd/sqrt(partn))*100) %>%
dplyr::select(AgeCat, SID, Exp, Gender, Lang.Betsy, value, sd, prop, se) -> propdat321
propdat321 %>%
drop_na() -> propdat321
propdat321$Gender <- factor(propdat321$Gender, levels=c("Boy", "Girl"))
propdat321$AgeCat <- memisc::recode(propdat321$AgeCat, "C" -> "6-7", "M" -> "8-9", "A" -> "Adult")
propdat321$AgeCat <- factor(propdat321$AgeCat, levels=c("6-7", "8-9", "Adult"))
inddat321$Gender <- factor(inddat321$Gender, levels=c("Boy", "Girl"))
inddat321$AgeCat <- memisc::recode(inddat321$AgeCat, "C" -> "6-7", "M" -> "8-9", "A" -> "Adult")
inddat321$AgeCat <- factor(inddat321$AgeCat, levels=c("6-7", "8-9", "Adult"))
pdf("~/Box Sync/Abstracts/2020/Edinburgh/p321.pdf", height=5, width=14)
plot <- ggplot(subset(propdat321, value=="f"), aes(y=prop, x=Gender)) +
facet_grid(~AgeCat) +
geom_dotplot(data=subset(inddat321, value=="f"), aes(y=prop, x=Gender, fill=AgeCat), binaxis="y",
binwidth = 1.5, dotsize=4, stackgroups=TRUE, binpositions="all", stackdir="center") +
geom_errorbar(aes(ymin=prop-se, ymax=prop+se), color="black", width=.3, position=position_dodge(.7), size=1.3)+
theme_bw() +
labs(x="", y="Percent /f/ produced", title="") +
scale_fill_manual(values=c("#63AAC0", "#F1AF3E", "#F46A58")) +
guides(fill=FALSE) +
theme(text = element_text(size=20))
plot2 <- plot +
geom_segment(aes(x, y, xend=xend, yend=yend), data.frame(x=.6, xend=1.4, y=33, yend=33),
size=1, color="#4F4F4F", alpha=1, linetype="dashed") +
geom_segment(aes(x,y,xend=xend,yend=yend), data.frame(x=1.6, xend=2.4, y=67, yend=67),
size=1, color="#4F4F4F", alpha=1, linetype="dashed")
print(plot2)
dev.off()
ftests
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(memisc)
library(pwr) #power analysis
library(MASS)
options(dplyr.width = Inf)
p111dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P111-phonvar-100-gram/P111data.csv", head=T)
p114dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P114-phonvar-100-gram/P114data.csv", head=T)
p311dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P311-phonvar-6733-gram/P311data.csv", head=T)
p211dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P211-phonvar-6733-unc/P211Datasheet.csv", head=T)
p121dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P121-phonvar-100-soc/P121data.csv", head=T)
p221dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P221-phonvar-6733-socunc/P221data.csv", head=T)
p321dat <- read.csv("~/Dropbox/bsneller-current/PhonVarAcquisition/designexp/P321-phonvar-6733-socgram/P321data.csv", head=T)
alldat <- rbind(p111dat, p211dat, p311dat)
alldats <- rbind(p121dat, p221dat, p321dat)
p111dat %>%
group_by(AgeCat, SID, RecEx.Betsy) %>%
mutate(rex = as.numeric(as.factor(RecEx.Betsy))-1) %>%
summarise(Age4 = mean(Age2),
rex = mean(rex)) %>%
ungroup() %>%
group_by(AgeCat) %>%
summarise(mean = mean(Age4),
min = min(Age4),
max = max(Age4),
Rex = sum(rex)) -> p111rex
p111dat %>%
group_by(AgeCat, SID, RecEx.Betsy) %>%
filter(RecEx.Betsy=="no") %>%
summarise(Age4 = mean(Age2)) %>%
ungroup() %>%
group_by(AgeCat) %>%
summarise(mean = mean(Age4),
min = min(Age4),
max = max(Age4)) -> p111
p211dat %>%
group_by(AgeCat, SID, RecEx.Betsy) %>%
mutate(rex = as.numeric(as.factor(RecEx.Betsy))-1) %>%
summarise(Age4 = mean(Age2),
rex = mean(rex)) %>%
ungroup() %>%
group_by(AgeCat) %>%
summarise(mean = mean(Age4),
min = min(Age4),
max = max(Age4),
Rex = sum(rex)) -> p211rex
p211dat %>%
group_by(AgeCat, SID, RecEx.Betsy) %>%
filter(RecEx.Betsy=="no") %>%
summarise(Age4 = mean(Age2)) %>%
ungroup() %>%
group_by(AgeCat) %>%
summarise(mean = mean(Age4),
min = min(Age4),
max = max(Age4)) -> p211
p311dat %>%
group_by(AgeCat, SID, RecEx.Betsy) %>%
mutate(rex = as.numeric(as.factor(RecEx.Betsy))-1) %>%
summarise(Age4 = mean(Age2),
rex = mean(rex)) %>%
ungroup() %>%
group_by(AgeCat) %>%
summarise(mean = mean(Age4),
min = min(Age4),
max = max(Age4),
Rex = sum(rex)) -> p311rex
p311dat %>%
group_by(AgeCat, SID, RecEx.Betsy) %>%
filter(RecEx.Betsy=="no") %>%
summarise(Age4 = mean(Age2)) %>%
ungroup() %>%
group_by(AgeCat) %>%
summarise(mean = mean(Age4),
min = min(Age4),
max = max(Age4)) -> p311
summary(alldat)
alldat %>%
filter(`RecEx.Betsy` == "no", Lang=="A", Production!="b", Production!="g",
Production!="k", Production!="d", Production!="th", Production!="t", Production!="s",
Production!="", Production!="?", !is.na(Production), Production!="th", Production!="what") %>%
mutate(Prod = memisc::recode(Production, "p" -> 0, "f" -> 1),
SID = as.factor(SID),
Exp=as.factor(Exp),
AgeCat=as.factor(AgeCat)) %>%
dplyr::select(Exp, SID, AgeCat, Production, Number, Lang.Betsy) -> l
alldats %>%
filter(`RecEx.Betsy` == "no", Lang=="A", Production!="b", Production!="g",
Production!="k", Production!="d", Production!="th", Production!="t", Production!="s",
Production!="", Production!="?", Production!="pf", Production!="l", Production!="P", !is.na(Production), Production!="th", Production!="what") %>%
mutate(Prod = memisc::recode(Production, "p" -> 0, "f" -> 1),
SID = as.factor(SID),
Exp=as.factor(Exp),
AgeCat=as.factor(AgeCat)) %>%
dplyr::select(Exp, SID, AgeCat, Production, Gender, Lang.Betsy) -> ls
alldat %>%
filter(`RecEx.Betsy` == "yes", Lang=="A") %>%
dplyr::select(Exp, AgeCat) -> oo
table(oo)
alldats %>%
filter(`RecEx.Betsy` == "yes", Lang=="A") %>%
dplyr::select(Exp, AgeCat) -> oos
table(oos)/24
r %>%
dplyr::mutate(Age2 = memisc::recode(Age, "18" -> 18, "24" -> 24, "22" -> 22, "19" -> 19, "20" -> 20, "21" -> 21,
"6;11" -> 6.92, "5;10" -> 5.83, "6;9" -> 6.75, "7;0" -> 7.0, "6;7" -> 6.58,
"6;8" -> 6.67, "6;2" -> 6.17, "5;9" -> 5.75, "6;0" -> 6.0, "6;5" -> 6.42,
"6;1" -> 6.08, "8;3" -> 8.25, "8;2" -> 8.17, "9;0" -> 9.0, "7;8" -> 7.67,
"8;4" -> 8.33, "8;10" -> 8.83, "9;1" -> 9.08, "8;6" -> 8.5, "7;6" -> 7.5,
"7;11" -> 7.92, "7;3" -> 7.25, "6;4" -> 6.33, "9;6" -> 9.5, "8;9" -> 8.75,
"7;2" -> 7.17, "7;5" -> 7.42, "6" -> 6.0, "8" -> 8.0, "7" -> 7.0,
"9;3" -> 9.25, "8;11" -> 8.92, "8;0" -> 8.0, "6.6" -> 6.5, "6;10" -> 6.83,
"8;5" -> 8.42, "9:5" -> 9.42, "7;4" -> 7.25, "8;7" -> 8.58, "7;10" -> 7.83,
"23" -> 23, "8;1" -> 8.08, "9;8" -> 9.67, "8;8" -> 8.67, "9;" -> 9.0)) -> sf
%>%
group_by(Exp, AgeCat) %>%
summarise(MeanAge = mean(Age2),
AgeRange = range(Age2)) -> pr
############ t test comparing f to p #####
l %>%
group_by(AgeCat, SID, Exp) %>%
summarise(n = n(),
f = sum(Production=="f")/n,
p = sum(Production=="p")/n) -> fpdat
ls %>%
group_by(AgeCat, SID, Exp) %>%
summarise(n = n(),
f = sum(Production=="f")/n,
p = sum(Production=="p")/n) -> fpdats
fpdat <- droplevels(subset(fpdat, !(AgeCat=="A" & Exp=="P111"))) ##took out bc exactly .5 and .5, can't do a paired test or a comparison with .5
listExp <- unique(fpdat$Exp)
fptest <- data.frame()
z=0
r=0
for(i in listExp) {
exp = subset(fpdat, Exp==i)
z <- z+1
print(i[[1]])
listAge <- unique(exp$AgeCat)
for(j in listAge) {
print(j)
r <- r+1
dat = subset(exp, AgeCat==j)
# ttest <- t.test(dat$f, dat$p)
fptest[r,1] <- i
fptest[r,2] <- j
fptest[r,3] <- round(t.test(dat$f, dat$p)[[1]][1], 3)
fptest[r,4] <- round(t.test(dat$f, dat$p)[[2]][1], 3)
fptest[r,5] <- round(t.test(dat$f, dat$p)[[3]][1], 3)
fptest[r,6] <- round(t.test(dat$f, mu=0)[[1]][1], 3)
fptest[r,7] <- round(t.test(dat$f, mu=0)[[2]][1], 3)
fptest[r,8] <- round(t.test(dat$f, mu=0)[[3]][1], 3)
}
}
fptest$sig <- fptest$V5 < 0.05
fptest$sig2 <- fptest$V8 < 0.05
fptest
fpdats <- droplevels(subset(fpdats, !(AgeCat=="A" & Exp=="P121"))) ##took out bc exactly .5 and .5, can't do a paired test or a comparison with .5
listExps <- unique(fpdats$Exp)
fptests <- data.frame()
z=0
r=0
for(i in listExps) {
exps = subset(fpdats, Exp==i)
z <- z+1
print(i[[1]])
listAges <- unique(exps$AgeCat)
for(j in listAges) {
print(j)
r <- r+1
dats = subset(exps, AgeCat==j)
# ttest <- t.test(dat$f, dat$p)
fptests[r,1] <- i
fptests[r,2] <- j
fptests[r,3] <- round(t.test(dats$f, dats$p)[[1]][1], 3)
fptests[r,4] <- round(t.test(dats$f, dats$p)[[2]][1], 3)
fptests[r,5] <- round(t.test(dats$f, dats$p)[[3]][1], 3)
fptests[r,6] <- round(t.test(dats$f, mu=0)[[1]][1], 3)
fptests[r,7] <- round(t.test(dats$f, mu=0)[[2]][1], 3)
fptests[r,8] <- round(t.test(dats$f, mu=0)[[3]][1], 3)
}
}
fptests$sig <- fptests$V5 < 0.05
fptests$sig2 <- fptests$V8 < 0.05
fptests
t.test(c(0.91, 0.09, .42, .62, .5, .54, .45, .45, .5), c(.08, .0, .58, .38, .5, .46, .54, .5, .5))
C121 <-droplevels(subset(fpdats, Exp=="P121", AgeCat=="C"))
write.csv(fpdats, file="~/Box Sync/Publications/2019/AcVar/121dat.csv")
P211c <- droplevels(subset(fpdat, AgeCat=="C" & Exp=="P211"))
tp <- round(t.test(P211c$f, P211c$p)[[1]][1], 3)
l %>%
group_by(AgeCat, SID, Exp, Number) %>%
summarise(n = n(),
f = sum(Production=="f")/n) -> fdat
ls %>%
group_by(AgeCat, SID, Exp, Gender) %>%
summarise(n = n(),
f = sum(Production=="f")/n) -> fdats
listExp <- unique(fdat$Exp)
ftest <- data.frame()
z=0
r=0
for(i in listExp) {
exp = subset(fdat, Exp==i)
z <- z+1
print(i[[1]])
listAge <- unique(exp$AgeCat)
for(j in listAge) {
print(j)
r <- r+1
dat = subset(exp, AgeCat==j)
# ttest <- t.test(dat$f, dat$p)
ftest[r,1] <- i
ftest[r,2] <- j
ftest[r,3] <- round(t.test(dat$f ~ dat$Number)[[1]][1],3)
ftest[r,4] <- round(t.test(dat$f ~ dat$Number)[[2]][1], 3)
ftest[r,5] <- round(t.test(dat$f ~ dat$Number)[[3]][1], 3)
}
}
ftest$sig <- ftest$V5 < 0.05
ftest
fdats <- droplevels(subset(fdats, !(AgeCat=="A" & Exp=="P121"))) ##took out bc exactly .5 and .5, can't do a paired test or a comparison with .5
listExps <- unique(fdats$Exp)
ftests <- data.frame()
z=0
r=0
for(i in listExps) {
exp = subset(fdats, Exp==i)
z <- z+1
print(i[[1]])
listAge <- unique(exp$AgeCat)
for(j in listAge) {
print(j)
r <- r+1
dat = subset(exp, AgeCat==j)
# ttest <- t.test(dat$f, dat$p)
ftests[r,1] <- i
ftests[r,2] <- j
ftests[r,3] <- round(t.test(dat$f ~ dat$Gender)[[1]][1],3)
ftests[r,4] <- round(t.test(dat$f ~ dat$Gender)[[2]][1], 3)
ftests[r,5] <- round(t.test(dat$f ~ dat$Gender)[[3]][1], 3)
}
}
ftests$sig <- ftests$V5 < 0.05
ftests
fdats %>%
mutate(input = case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
fdats %>%
mutate(input = case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
a1s <- drogevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
stests <- data.frame()
a1s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
head(a1s)
head(sdats)
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
library(dplyr) # >= 0.7.0
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ "0",
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ "0",
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ "poop",
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
e
stests <- data.frame()
a1s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
fdats <- fdats[!is.na(fdats)]
fdats <- na.omit(fdats)
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
a1s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
head(sdats)
a2s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P211" & Gender=="b"))
head(a2s)
head(fdats)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.333)
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="g"))
head(c321)
nrow(c321)
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.3333)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.3333)
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P321" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P321" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.3333)
fptests
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P221" & Gender=="b"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P221" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111" & Gender=="g"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111" & Gender=="g"))
head(c321)
summary(fdats)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111" & Gender=="b"))
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111"))
c321 <- droplevels(subset(fdats, AgeCat=="C"))
head(c321)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P121" & Gender=="B"))
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P121" & Gender=="b"))
t.test(c321$f, mu=0)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P121" & Gender=="g"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P121" & Gender=="g"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P121" & Gender=="b"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P121" & Gender=="b"))
t.test(c321$f, mu=0)
