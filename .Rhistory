ftest[r,4] <- round(t.test(dat$f ~ dat$Number)[[2]][1], 3)
ftest[r,5] <- round(t.test(dat$f ~ dat$Number)[[3]][1], 3)
}
}
ftest$sig <- ftest$V5 < 0.05
ftest
fdats <- droplevels(subset(fdats, !(AgeCat=="A" & Exp=="P121"))) ##took out bc exactly .5 and .5, can't do a paired test or a comparison with .5
listExps <- unique(fdats$Exp)
ftests <- data.frame()
z=0
r=0
for(i in listExps) {
exp = subset(fdats, Exp==i)
z <- z+1
print(i[[1]])
listAge <- unique(exp$AgeCat)
for(j in listAge) {
print(j)
r <- r+1
dat = subset(exp, AgeCat==j)
# ttest <- t.test(dat$f, dat$p)
ftests[r,1] <- i
ftests[r,2] <- j
ftests[r,3] <- round(t.test(dat$f ~ dat$Gender)[[1]][1],3)
ftests[r,4] <- round(t.test(dat$f ~ dat$Gender)[[2]][1], 3)
ftests[r,5] <- round(t.test(dat$f ~ dat$Gender)[[3]][1], 3)
}
}
ftests$sig <- ftests$V5 < 0.05
ftests
fdats %>%
mutate(input = case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
fdats %>%
mutate(input = case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
a1s <- drogevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
stests <- data.frame()
a1s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
head(a1s)
head(sdats)
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
library(dplyr) # >= 0.7.0
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ "0",
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ "0",
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ "poop",
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
e
stests <- data.frame()
a1s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
fdats <- fdats[!is.na(fdats)]
fdats <- na.omit(fdats)
fdats %>%
mutate(input = dplyr::case_when(Exp=="P111" & Gender=="g" ~ 1,
Exp=="P111" & Gender=="b" ~ 0,
Exp=="P211" ~ .6666667,
Exp=="P311" & Gender=="g" ~ .666667,
Exp=="P311" & Gender=="b" ~.33333)) -> sdats
head(sdats)
a1s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P111" & Gender=="b"))
head(sdats)
a2s <- droplevels(subset(sdats, AgeCat=="A" & Exp=="P211" & Gender=="b"))
head(a2s)
head(fdats)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.333)
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="g"))
head(c321)
nrow(c321)
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.3333)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.3333)
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P321" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P321" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P321" & Gender=="b"))
t.test(c321$f, mu=.3333)
fptests
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P221" & Gender=="b"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="A" & Exp=="P221" & Gender=="g"))
t.test(c321$f, mu=.6667)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111" & Gender=="g"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111" & Gender=="g"))
head(c321)
summary(fdats)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111" & Gender=="b"))
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P111"))
c321 <- droplevels(subset(fdats, AgeCat=="C"))
head(c321)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P121" & Gender=="B"))
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P121" & Gender=="b"))
t.test(c321$f, mu=0)
c321 <- droplevels(subset(fdats, AgeCat=="C" & Exp=="P121" & Gender=="g"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P121" & Gender=="g"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P121" & Gender=="b"))
t.test(c321$f, mu=1)
c321 <- droplevels(subset(fdats, AgeCat=="M" & Exp=="P121" & Gender=="b"))
t.test(c321$f, mu=0)
# Load in packages & data
library(tidyverse)
library(lme4)
library(lmerTest)
#load in data
alldat <- read.csv("~/OneDrive - Michigan State University/Abstracts/2021/NWAV/DataAnalysis/ing-dat-all-CODED.csv", head=T, sep=",")
#get a quick view of how many tokens are in each category
alldat %>%
group_by(Linguistic.Category) %>%
summarise(n = n()) -> l
# combine categories
Verb <- c("V", "Ph")
Noun <- c("N", "PN")
Adj <- c("Adj", "Adv")
SN <- c("S/N")
Gerund <- c("G")
# add assigned sex at birth to analysis
afab <- c("AnR", "AmR", "JB")
amab <- c("JC", "MS", "GW")
# cut categories "D" and "T", merge categories into broad ones, add sex at birth to data frame
alldat %>%
filter(Linguistic.Category !="T", Linguistic.Category!="D") %>%
mutate(Speech = case_when(
Linguistic.Category %in% Verb ~ "Verb",
Linguistic.Category %in% Noun ~ "Noun",
Linguistic.Category %in% SN ~ "Something",
Linguistic.Category %in% Adj ~ "Adj",
Linguistic.Category %in% Gerund ~ "Gerund"
),
Birth = case_when(
Speaker %in% afab ~ "AFAB",
Speaker %in% amab ~ "AMAB"
)) -> speechdat
# calculate average -ing by speaker
speechdat %>%
group_by(Speaker, Style) %>%
summarise(n=n(),
se=sd(Code1)/sqrt(n),
mean=mean(Code1)) -> all.sum
# new thing
speechdat %>%
group_by(Speaker) %>%
summarise(n=n(),
se=sd(Code1)/sqrt(n),
mean=mean(Code1)) -> all.sum1
#calculate average -ing by speech category
speechdat %>%
group_by(Speech) %>%
summarise(n=n(),
se=sd(Code1)/sqrt(n),
mean=mean(Code1)) -> speech.sum
# reorder factors so they go in order of noun to verb
speech.sum$Speech <- factor(speech.sum$Speech, levels = c("Noun", "Something", "Adj", "Gerund", "Verb"))
# make the plot
speechplot <- ggplot(speech.sum, aes(x=Speech, y=mean)) +
geom_bar(stat="identity", position=position_dodge(width=.8),
width=.8, alpha=.8, color="black") +
geom_errorbar(aes(x=Speech, ymin=mean-se, ymax=mean+se, width=.3),
position=position_dodge(width=.8)) +
labs(y="Rate of -ing", x="Part of Speech") +
theme(text=element_text(size=20))
speechplot
# save the speech plot to
pdf("~/OneDrive - Michigan State University/Abstracts/2021/NWAV/ingpos.pdf", height=8, width=8)
# save the speech plot to
pdf("~/OneDrive - Michigan State University/Abstracts/2021/NWAV/ingpos.pdf", height=8, width=8)
print(speechplot)
dev.off()
# now make the plot for speakers
ingplot <- ggplot(all.sum, aes(x=Speaker, y=mean, fill=Style)) +
geom_bar(stat="identity", position=position_dodge(width=.8),
width=.8, alpha=.8, color="black") +
geom_errorbar(aes(x=Speaker, ymin=mean-se, ymax=mean+se, width=.3),
position=position_dodge(width=.8)) +
scale_fill_manual(values=c("#74A6B6","#581845"),
labels=c("Baseline", "Gender")) +
labs(y="Rate of -ing", fill="Topic")
ingplot
#speaker as a random intercept
mod.ing <- lmer(Code1 ~ Style + Birth + Speech + (1|Word) + (1|Speaker), data=speechdat)
summary(mod.ing)
#try interaction of social factors (style and birth)
mod.ing2 <- lmer(Code1 ~ Style*Birth + Speech + (1|Word) + (1|Speaker), data=speechdat)
summary(mod.ing2)
#compare models; biggest one first:
anova(mod.ing2, mod.ing) #no difference, so we go with the model that fits the Gratton expectations (interaction)
mod.ing
summary(mod.ing)
??anova()
coeff(mod.ing2)
coef(mod.ing2)
head(alldat)
d=read.csv("~/OneDrive - Michigan State University/Students/AdamBarnhardt/AdamCapstoneDataCorrected.csv")
library(lmerTest)
library(lmerTest)
library(ggplot2)
install.packages("gridExtra")
library(gridExtra)
d$speaker_age_group=relevel(d$speaker_age_group, "old")
d$listener_age=ifelse(d$listener_birthyear < 1982, c("older"), c("younger"))
summary(d$listener_age)
d$speaker_age_group=relevel(as.factor(d$speaker_age_group), "old")
d$listener_age=ifelse(d$listener_birthyear < 1982, c("older"), c("younger"))
summary(d$listener_age)
head(d)
d$listener_age=as.factor(ifelse(d$listener_birthyear < 1982, c("older"), c("younger")))
summary(d$listener_age)
ggplot(friendliness, aes(speaker, fitted, color=guise_southern)) + geom_boxplot()
friendliness=subset(d, question_content=="unfriendly_friendly")
friendliness_mm=lmer(rating ~ speaker_age_group*listener_age*guise_southern + listener_gender + lis_rural_urban + (1|listener) + (1|speaker), data=friendliness, REML=F)
summary(friendliness_mm)
friendliness_plot=ggplot(friendliness, aes(speaker_age_group, rating, color=guise_southern)) + geom_boxplot() + facet_wrap(~listener_age, labeller = labeller(listener_age = listener.labs)) + labs(x="Speaker Age Groups", y="Rating Values", color="Guise Type") + ggtitle("Friendliness - Responses")
ggplot(friendliness, aes(speaker_age_group, rating, color=guise_southern)) +
geom_boxplot() +
facet_wrap(~listener_age, labeller = labeller(listener_age = listener.labs)) +
labs(x="Speaker Age Groups", y="Rating Values", color="Guise Type") +
ggtitle("Friendliness - Responses")
friendliness_plot=ggplot(friendliness, aes(speaker_age_group, rating, color=guise_southern)) +
geom_boxplot() +
facet_wrap(~listener_age) +
labs(x="Speaker Age Groups", y="Rating Values", color="Guise Type") +
ggtitle("Friendliness - Responses")
friendliness_plot
oldness_plot=ggplot(d, aes(speaker_age_estimate, fill=guise_southern)) + geom_bar(stat = "count") + facet_wrap(~listener_age, labeller = labeller(listener_age = listener.labs)) + labs(x="Estimated Age of Speaker", fill="Guise Type") + ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
oldness_plot=ggplot(d, aes(speaker_age_estimate, fill=guise_southern)) +
geom_bar(stat = "count") +
facet_wrap(~listener_age) +
#facet_wrap(~listener_age, labeller = labeller(listener_age = listener.labs)) +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
oldness_plot
# plot for oldness
d$speaker_age_estimate <- relevel(d$speaker_age_estimate, c("Young adult", "Middle aged", "Senior"))
# plot for oldness
d$speaker_age_estimate <- factor(d$speaker_age_estimate, levels=c("Young adult", "Middle aged", "Senior"))
oldness_plot=ggplot(d, aes(speaker_age_estimate, fill=guise_southern)) +
geom_bar(stat = "count") +
facet_wrap(~listener_age) +
#facet_wrap(~listener_age, labeller = labeller(listener_age = listener.labs)) +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
oldness_plot
head(d)
d %>%
group_by(guise_southern, speaker_age_group) %>%
mutate(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")) -> l
library(tidyverse)
d %>%
group_by(guise_southern, speaker_age_group) %>%
mutate(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")) -> l
head(l)
d %>%
group_by(guise_southern, speaker_age_group) %>%
summary(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")) -> l
l
head(l)
d %>%
group_by(guise_southern, speaker_age_group) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")) -> l
l
nrow(d)
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")) -> l
l
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n) -> l
l
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")) -> l
l
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n) -> l
l
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o)) -> l
l
# obtain proportion values: for each age group and each guise, what proportion of the time do listeners answer "y, m, o"
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o)) %>% #this line confirms each row sums to 1
pivot_longer(!guise_southern, !listener_age, !n, names_to="Age.Est", values_to="Proportion") -> l
head(d)
# obtain proportion values: for each age group and each guise, what proportion of the time do listeners answer "y, m, o"
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o)) -> l# %>% #this line confirms each row sums to 1
l
# obtain proportion values: for each age group and each guise, what proportion of the time do listeners answer "y, m, o"
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o))  %>% #this line confirms each row sums to 1
pivot_longer(!guise_southern, !listener_age, !n, names_to="Age.Est", values_to="Proportion") -> l
l
# obtain proportion values: for each age group and each guise, what proportion of the time do listeners answer "y, m, o"
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o))  %>% #this line confirms each row sums to 1
pivot_longer(c(prop.y:prop.o), names_to="Age.Est", values_to="Proportion") -> l
l
# obtain proportion values: for each age group and each guise, what proportion of the time do listeners answer "y, m, o"
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o))  %>% #this line confirms each row sums to 1
pivot_longer(c(prop.y:prop.o), names_to="Age.Est", values_to="Proportion") %>% # wide to long format
mutate(Age.Est.2 = case_when( #rename to fit Adam's existing plot
Age.Est == "prop.y" ~ "Young adult",
Age.Est == "prop.m" ~ "Middle aged",
Age.Est == "prop.o" ~ "Senior"
)) -> l
l
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = labeller(listener_age = listener.labs)) +
geom_bar(stat=count) +
labs(x="Estimated Age of Speaker", fill="Guise Type", )
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = c("Older Listeners", "Younger Listeners")) +
geom_bar(stat=count) +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = c("Older Listeners", "Younger Listeners")) +
geom_bar(stat="identity") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = c("Older Listeners", "Younger Listeners")) +
geom_bar(stat="identity") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
l$Age.Est.2 <- factor(l$Age.Est.2, levels=c("Young adult", "Middle aged", "Senior"))
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
age.labs = c("Older Listeners", "Younger Listeners")
facet_wrap(~listener_age, labeller = labeller(age.labs) +
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = labeller(age.labs)) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = labeller(listener_age=age.labs)) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
age.labs = c("Older Listeners", "Younger Listeners")
l$Age.Est.2 <- factor(l$Age.Est.2, levels=c("Young adult", "Middle aged", "Senior"))
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age, labeller = labeller(listener_age=age.labs)) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
# obtain proportion values: for each age group and each guise, what proportion of the time do listeners answer "y, m, o"
d %>%
group_by(guise_southern, listener_age) %>%
summarise(n=n(),
prop.y = sum(speaker_age_estimate=="Young adult")/n,
prop.m = sum(speaker_age_estimate=="Middle aged")/n,
prop.o = sum(speaker_age_estimate=="Senior")/n,
sumone = sum(prop.y,prop.m,prop.o))  %>% #this line confirms each row sums to 1
pivot_longer(c(prop.y:prop.o), names_to="Age.Est", values_to="Proportion") %>% # wide to long format
mutate(Age.Est.2 = case_when( #rename to fit Adam's existing plot
Age.Est == "prop.y" ~ "Young adult",
Age.Est == "prop.m" ~ "Middle aged",
Age.Est == "prop.o" ~ "Senior"
),
listener_age = case_when(
listener_age=="older" ~ "Older Listeners",
listener_age=="younger" ~ "Younger Listeners"
)) -> l
age.labs = c("Older Listeners", "Younger Listeners")
l$Age.Est.2 <- factor(l$Age.Est.2, levels=c("Young adult", "Middle aged", "Senior"))
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type", y="Proportion Answered") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type")
plot
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type", y="Proportion Answered") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type") +
theme(text=element_text(size=20))
plot
plot <- ggplot(l, aes(x=Age.Est.2, y=Proportion, fill=guise_southern)) +
facet_wrap(~listener_age) +
geom_bar(stat="identity", position="dodge") +
labs(x="Estimated Age of Speaker", fill="Guise Type", y="Proportion Answered") +
ggtitle("Distribution of Speaker Age Estimations Stratified by Guise Type") +
theme(text=element_text(size=15)) #change font size - 15 or 20 is usually what you want
plot
pdf("newplot.pdf", height=5, width=10)
print(plot)
dev.off()
